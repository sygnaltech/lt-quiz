{
  "version": 3,
  "sources": ["../../src/sa5/radioButton.ts"],
  "sourcesContent": ["export class WebflowRadioButton {\n    private outerLabel: HTMLLabelElement;\n    private inputElement: HTMLInputElement;\n    private labelSpan: HTMLSpanElement;\n    private radioInputDiv: HTMLDivElement;\n\n    get checked(): boolean {\n        return this.inputElement.checked;\n    }\n    set checked(value: boolean) {\n        this.inputElement.checked = value;\n        if(this.radioInputDiv) {\n            if (value) {\n                this.radioInputDiv.classList.add(\"w--redirected-checked\");\n            } else {\n                this.radioInputDiv.classList.remove(\"w--redirected-checked\");\n            }\n        }            \n    }\n\n    constructor(element: HTMLElement) {\n        // Ensure the element is a label\n        if (!(element instanceof HTMLLabelElement)) {\n            throw new Error('Element must be a label.');\n        }\n\n        this.outerLabel = element;\n\n        // Find the input element inside the label\n        const inputElement = this.outerLabel.querySelector<HTMLInputElement>('input[type=\"radio\"]');\n        if (!inputElement) {\n            throw new Error('Radio input element not found.');\n        }\n        this.inputElement = inputElement;\n\n        // Find the span element inside the label\n        const labelSpan = this.outerLabel.querySelector<HTMLSpanElement>('span');\n        if (!labelSpan) {\n            throw new Error('Label span element not found.');\n        }\n        this.labelSpan = labelSpan;\n\n        // Find the div with class \"w-radio-input\"\n        const radioInputDiv = this.outerLabel.querySelector<HTMLDivElement>('.w-radio-input');\n        if (!radioInputDiv) {\n            throw new Error('Radio input div element not found.');\n        }\n        this.radioInputDiv = radioInputDiv;\n    }\n\n    // Add any methods you need to manipulate these elements\n    public toggleCheck() {\n        this.inputElement.checked = !this.inputElement.checked;\n    }\n\n    public isChecked(): boolean {\n        return this.inputElement.checked;\n    }\n\n    public getLabelText(): string {\n        return this.labelSpan.textContent || '';\n    }\n}\n\n"],
  "mappings": ";;;AAAO,MAAM,qBAAN,MAAyB;AAAA,IAM5B,IAAI,UAAmB;AACnB,aAAO,KAAK,aAAa;AAAA,IAC7B;AAAA,IACA,IAAI,QAAQ,OAAgB;AACxB,WAAK,aAAa,UAAU;AAC5B,UAAG,KAAK,eAAe;AACnB,YAAI,OAAO;AACP,eAAK,cAAc,UAAU,IAAI,uBAAuB;AAAA,QAC5D,OAAO;AACH,eAAK,cAAc,UAAU,OAAO,uBAAuB;AAAA,QAC/D;AAAA,MACJ;AAAA,IACJ;AAAA,IAEA,YAAY,SAAsB;AAE9B,UAAI,EAAE,mBAAmB,mBAAmB;AACxC,cAAM,IAAI,MAAM,0BAA0B;AAAA,MAC9C;AAEA,WAAK,aAAa;AAGlB,YAAM,eAAe,KAAK,WAAW,cAAgC,qBAAqB;AAC1F,UAAI,CAAC,cAAc;AACf,cAAM,IAAI,MAAM,gCAAgC;AAAA,MACpD;AACA,WAAK,eAAe;AAGpB,YAAM,YAAY,KAAK,WAAW,cAA+B,MAAM;AACvE,UAAI,CAAC,WAAW;AACZ,cAAM,IAAI,MAAM,+BAA+B;AAAA,MACnD;AACA,WAAK,YAAY;AAGjB,YAAM,gBAAgB,KAAK,WAAW,cAA8B,gBAAgB;AACpF,UAAI,CAAC,eAAe;AAChB,cAAM,IAAI,MAAM,oCAAoC;AAAA,MACxD;AACA,WAAK,gBAAgB;AAAA,IACzB;AAAA,IAGO,cAAc;AACjB,WAAK,aAAa,UAAU,CAAC,KAAK,aAAa;AAAA,IACnD;AAAA,IAEO,YAAqB;AACxB,aAAO,KAAK,aAAa;AAAA,IAC7B;AAAA,IAEO,eAAuB;AAC1B,aAAO,KAAK,UAAU,eAAe;AAAA,IACzC;AAAA,EACJ;",
  "names": []
}
