{
  "version": 3,
  "sources": ["../../src/sa5/layout.ts"],
  "sourcesContent": ["\n\n\n\n/*\n * SA5 | Layout\n */\n\n\nexport class ElementGroupController {\n\n    groups: Map<string, ElementGroup>;\n\n    constructor() {\n        this.groups = new Map<string, ElementGroup>();\n    }\n  \n    init() {\n        const elements = document.querySelectorAll<HTMLElement>('[wfu-element-group]');\n        elements.forEach(element => {\n            const groupName = element.getAttribute('wfu-element-group');\n            if (groupName) {\n                if (!this.groups.has(groupName)) {\n                    const group = new ElementGroup(groupName);\n                    this.groups.set(groupName, group);\n                }\n                this.groups.get(groupName)?.addElement(element);\n            }\n        });\n    }\n   \n  \n  }\n  \n\nexport class ElementGroup {\n    name: string;\n    elements: ElementGroupElement[];\n\n    constructor(name: string) {\n        this.name = name;\n        this.elements = [];\n    }\n\n    addElement(element: HTMLElement) {\n        const elementGroupElement = new ElementGroupElement(element);\n        this.elements.push(elementGroupElement);\n    }\n\n    init() {\n        // Initialize the elements in the group\n    }\n\n\n    hideAll() {\n        this.elements.forEach(element => element.hide());\n    }\n\n    showAll() {\n        this.elements.forEach(element => element.show());\n    }\n\n    show(name: string) {\n        this.elements.forEach(element => {\n            if (element.element.getAttribute('wfu-element-name') === name) {\n                element.show();\n            } else {\n                element.hide();\n            }\n        });\n    }\n\n}\n\n\nexport class ElementGroupElement {\n\n    element: HTMLElement;\n    constructor(element: HTMLElement) {\n        this.element = element;\n    } \n\n    hide() {\n        this.element.style.display = 'none';\n    }\n\n    show() {\n        this.element.style.display = 'block'; // HACK: \n    }\n\n    init() {\n        // Initialize the element if needed\n    }\n\n}\n"],
  "mappings": ";;;AASO,MAAM,yBAAN,MAA6B;AAAA,IAIhC,cAAc;AACV,WAAK,SAAS,oBAAI,IAA0B;AAAA,IAChD;AAAA,IAEA,OAAO;AACH,YAAM,WAAW,SAAS,iBAA8B,qBAAqB;AAC7E,eAAS,QAAQ,aAAW;AAnBpC;AAoBY,cAAM,YAAY,QAAQ,aAAa,mBAAmB;AAC1D,YAAI,WAAW;AACX,cAAI,CAAC,KAAK,OAAO,IAAI,SAAS,GAAG;AAC7B,kBAAM,QAAQ,IAAI,aAAa,SAAS;AACxC,iBAAK,OAAO,IAAI,WAAW,KAAK;AAAA,UACpC;AACA,qBAAK,OAAO,IAAI,SAAS,MAAzB,mBAA4B,WAAW;AAAA,QAC3C;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EAGF;AAGK,MAAM,eAAN,MAAmB;AAAA,IAItB,YAAY,MAAc;AACtB,WAAK,OAAO;AACZ,WAAK,WAAW,CAAC;AAAA,IACrB;AAAA,IAEA,WAAW,SAAsB;AAC7B,YAAM,sBAAsB,IAAI,oBAAoB,OAAO;AAC3D,WAAK,SAAS,KAAK,mBAAmB;AAAA,IAC1C;AAAA,IAEA,OAAO;AAAA,IAEP;AAAA,IAGA,UAAU;AACN,WAAK,SAAS,QAAQ,aAAW,QAAQ,KAAK,CAAC;AAAA,IACnD;AAAA,IAEA,UAAU;AACN,WAAK,SAAS,QAAQ,aAAW,QAAQ,KAAK,CAAC;AAAA,IACnD;AAAA,IAEA,KAAK,MAAc;AACf,WAAK,SAAS,QAAQ,aAAW;AAC7B,YAAI,QAAQ,QAAQ,aAAa,kBAAkB,MAAM,MAAM;AAC3D,kBAAQ,KAAK;AAAA,QACjB,OAAO;AACH,kBAAQ,KAAK;AAAA,QACjB;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,EAEJ;AAGO,MAAM,sBAAN,MAA0B;AAAA,IAG7B,YAAY,SAAsB;AAC9B,WAAK,UAAU;AAAA,IACnB;AAAA,IAEA,OAAO;AACH,WAAK,QAAQ,MAAM,UAAU;AAAA,IACjC;AAAA,IAEA,OAAO;AACH,WAAK,QAAQ,MAAM,UAAU;AAAA,IACjC;AAAA,IAEA,OAAO;AAAA,IAEP;AAAA,EAEJ;",
  "names": []
}
