{
  "version": 3,
  "sources": ["../../src/page/quiz.ts"],
  "sourcesContent": ["\n/*\n * Page | Quiz\n */\n\n// chart - https://codepen.io/memetican/pen/PorzKOW/38772a3ed4c8e3bd93e38a544c8ee0be\n\n\nimport { IRouteHandler } from \"@sygnal/sse\";\n\n\n\nexport class QuizPage implements IRouteHandler {\n\n  constructor() {\n  }\n\n  setup() {\n        \n  }\n\n  exec() {\n\n    this.fetchIPInfo();\n    this.setupEventListeners();  \n    \n    // const ipinfoWrapper = new IPinfoWrapper(\"37cce46c605631\"); // Sygnal's HACK\n\n    // ipinfoWrapper.lookupIp(\"1.1.1.1\").then((response: IPinfo) => {\n    //     console.log(response);\n    // });\n  \n    const sa5: any = window['sa5' as any];\n    sa5.push(['slideNextRequest', \n      (slider: any, index: any) => {\n        console.log(\"SLIDE NEXT REQUEST\", slider.name, slider, index); \n\n        // Example usage:\n        // This will fetch the 3rd slide from the slider with the custom attribute 'wfu-slider=\"quiz\"'\n        const slide = this.getSlideByPosition(index + 1);\n        if (slide) {\n            console.log('Slide found:', slide);\n\n          return this.checkRadioSelection(slide); \n\n        } else {\n            console.log('Slide not found.');\n        }\n\n        return (index < 6); \n//        return false;\n        }]); \n    sa5.push(['slidePrevRequest', \n      (slider: any, index: any) => {\n        console.log(\"SLIDE PREV REQUEST\", slider.name, slider, index); \n        return (index > 0); \n        }]); \n\n\n  }\n\n  checkRadioSelection(container: HTMLElement): boolean {\n    // Find all radio input elements within the given container\n    const radios = container.querySelectorAll<HTMLInputElement>('input[type=\"radio\"]');\n\n    // Check if any radio button is selected\n    for (let i = 0; i < radios.length; i++) {\n        if (radios[i].checked) {\n            return true; // Return true if any radio is selected\n        }\n    }\n\n    return false; // Return false if no radios are selected\n}\n\n\n\n  getSlideByPosition(position: number): HTMLElement | null {\n    // Locate the element with the custom attribute wfu-slider=\"quiz\"\n    const slider = document.querySelector(`[wfu-slider=quiz]`);\n\n    if (!slider) {\n        console.error(\"Slider not found.\");\n        return null;\n    }\n\n    // Locate all the elements with the class 'w-slide' within the slider\n    const slides = slider.querySelectorAll(`.w-slide`);\n\n    // Retrieve the slide by its position (1-based index)\n    if (position < 1 || position > slides.length) {\n        console.error(\"Slide position out of range.\");\n        return null;\n    }\n\n    // Return the specified slide, adjusting for zero-based index\n    return slides[position - 1] as HTMLElement;\n}\n\n\n  async fetchIPInfo() {\n    const url = `https://ipinfo.io?token=37cce46c605631`;\n\n    try {\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(data);\n\n      this.applyIPInfoData(data);\n\n    } catch (error) {\n        console.error('Failed to fetch IP info:', error);\n    }\n}\n\n\napplyIPInfoData(data: any) {\n  // Find all elements with the 'ip-info' attribute\n  const elements = document.querySelectorAll<HTMLElement>('[ip-info]');\n\n  // Iterate over each element\n  elements.forEach((element: HTMLElement) => {\n      // Get the property name from the 'ip-info' attribute\n      const propertyName = element.getAttribute('ip-info');\n      \n      // Check if the property exists in the data object\n      if (propertyName && data.hasOwnProperty(propertyName)) {\n          // Set the inner text of the element to the value of the corresponding property in the data object\n//          element.textContent = data[propertyName];\n\n        this.setElemData(element, data[propertyName]); \n\n      } else {\n          console.log(`Property '${propertyName}' not found in data`);\n      }\n  });\n}\n\n\n  private setupEventListeners(): void {\n    // Get all radio input elements\n    const radios: NodeListOf<HTMLInputElement> = document.querySelectorAll('input[type=\"radio\"]');\n    \n    // Add an event listener to each radio button\n    radios.forEach(radio => {\n        radio.addEventListener('change', () => this.calculateTotalScore());\n    });\n  }\n\n  private calculateTotalScore(): void {\n    // Get all checked radio input elements\n    const checkedRadios: NodeListOf<HTMLInputElement> = document.querySelectorAll('input[type=\"radio\"]:checked');\n    let totalScore: number = 0;\n    console.log(\"clicked\");\n\n    // Sum the values of the checked radio inputs\n    checkedRadios.forEach(radio => {\n        // Ensure the value is a number before adding it to totalScore\n        totalScore += Number(radio.value);\n    });\n\n    // Display the total score - Update or modify based on where you want to display\n    const scoreDisplay: HTMLElement | null = document.getElementById('scoreDisplay');\n    if (scoreDisplay) {\n        scoreDisplay.textContent = `Total Score: ${totalScore}`;\n    }\n\n    const dataElems: NodeListOf<HTMLElement> = document.querySelectorAll('[data-item]');\n    dataElems.forEach(elem => {\n\n      switch(elem.getAttribute(\"data-item\")) {\n        case \"score\":\n          this.setElemData(elem, totalScore.toString());\n          break;\n        case \"percentage\": \n          const percentage: number | null = this.getPercentage(totalScore); \n          if (percentage) {\n            this.setElemData(elem, percentage.toString()); \n          }\n          break;\n      }\n\n    });\n\n\n    // const scoreElems: NodeListOf<HTMLElement> = document.querySelectorAll('[data-item=\"percentage\"]');\n    // scoreElems.forEach(elem => {\n    //   elem.innerText = totalScore.toString(); \n    // });\n\n\n      // // Set score hidden inputin quiz form\n      // const formInputScore: HTMLInputElement = document.querySelectorAll<HTMLInputElement>('input[name=\"Score\"]')[0];\n      // if (formInputScore) {\n      //     formInputScore.value = totalScore.toString();\n      // }\n\n  }\n\n  private getPercentage(index: number): number | null {\n    const dataPoints: number[] = [0, 4.12, 6.10, 8.95, 12.95, 18.39, 25.42, 33.99, 43.76, 54.21, 64.25, 73.20, 80.57, 86.26, 90.44, 93.39];\n\n    // Check if the provided index is within the valid range\n    if (index < 0 || index >= dataPoints.length) {\n        console.error(\"Index out of range. Please provide an index between 0 and 15.\");\n        return null; // Return null or throw an error if the index is out of range\n    }\n\n    return dataPoints[index]; // Return the percentage value at the specified index\n  }\n\n\n  setElemData(elem: HTMLElement, value: string): void {\n\n\n    switch(elem.tagName.toLowerCase()) {\n      case \"input\":\n\n        const inputElem: HTMLInputElement = elem as HTMLInputElement; \n        inputElem.value = value;\n\n        break;\n      default: \n\n        elem.innerText = value; \n\n        break;\n    }\n\n\n  }\n\n}\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAYO,MAAM,WAAN,MAAwC;AAAA,IAE7C,cAAc;AAAA,IACd;AAAA,IAEA,QAAQ;AAAA,IAER;AAAA,IAEA,OAAO;AAEL,WAAK,YAAY;AACjB,WAAK,oBAAoB;AAQzB,YAAM,MAAW,OAAO;AACxB,UAAI,KAAK;AAAA,QAAC;AAAA,QACR,CAAC,QAAa,UAAe;AAC3B,kBAAQ,IAAI,sBAAsB,OAAO,MAAM,QAAQ,KAAK;AAI5D,gBAAM,QAAQ,KAAK,mBAAmB,QAAQ,CAAC;AAC/C,cAAI,OAAO;AACP,oBAAQ,IAAI,gBAAgB,KAAK;AAEnC,mBAAO,KAAK,oBAAoB,KAAK;AAAA,UAEvC,OAAO;AACH,oBAAQ,IAAI,kBAAkB;AAAA,UAClC;AAEA,iBAAQ,QAAQ;AAAA,QAEhB;AAAA,MAAC,CAAC;AACN,UAAI,KAAK;AAAA,QAAC;AAAA,QACR,CAAC,QAAa,UAAe;AAC3B,kBAAQ,IAAI,sBAAsB,OAAO,MAAM,QAAQ,KAAK;AAC5D,iBAAQ,QAAQ;AAAA,QAChB;AAAA,MAAC,CAAC;AAAA,IAGR;AAAA,IAEA,oBAAoB,WAAiC;AAEnD,YAAM,SAAS,UAAU,iBAAmC,qBAAqB;AAGjF,eAAS,IAAI,GAAG,IAAI,OAAO,QAAQ,KAAK;AACpC,YAAI,OAAO,GAAG,SAAS;AACnB,iBAAO;AAAA,QACX;AAAA,MACJ;AAEA,aAAO;AAAA,IACX;AAAA,IAIE,mBAAmB,UAAsC;AAEvD,YAAM,SAAS,SAAS,cAAc,mBAAmB;AAEzD,UAAI,CAAC,QAAQ;AACT,gBAAQ,MAAM,mBAAmB;AACjC,eAAO;AAAA,MACX;AAGA,YAAM,SAAS,OAAO,iBAAiB,UAAU;AAGjD,UAAI,WAAW,KAAK,WAAW,OAAO,QAAQ;AAC1C,gBAAQ,MAAM,8BAA8B;AAC5C,eAAO;AAAA,MACX;AAGA,aAAO,OAAO,WAAW;AAAA,IAC7B;AAAA,IAGQ,cAAc;AAAA;AAClB,cAAM,MAAM;AAEZ,YAAI;AACA,gBAAM,WAAW,MAAM,MAAM,GAAG;AAChC,gBAAM,OAAO,MAAM,SAAS,KAAK;AACjC,kBAAQ,IAAI,IAAI;AAElB,eAAK,gBAAgB,IAAI;AAAA,QAE3B,SAAS,OAAP;AACE,kBAAQ,MAAM,4BAA4B,KAAK;AAAA,QACnD;AAAA,MACJ;AAAA;AAAA,IAGA,gBAAgB,MAAW;AAEzB,YAAM,WAAW,SAAS,iBAA8B,WAAW;AAGnE,eAAS,QAAQ,CAAC,YAAyB;AAEvC,cAAM,eAAe,QAAQ,aAAa,SAAS;AAGnD,YAAI,gBAAgB,KAAK,eAAe,YAAY,GAAG;AAIrD,eAAK,YAAY,SAAS,KAAK,aAAa;AAAA,QAE9C,OAAO;AACH,kBAAQ,IAAI,aAAa,iCAAiC;AAAA,QAC9D;AAAA,MACJ,CAAC;AAAA,IACH;AAAA,IAGU,sBAA4B;AAElC,YAAM,SAAuC,SAAS,iBAAiB,qBAAqB;AAG5F,aAAO,QAAQ,WAAS;AACpB,cAAM,iBAAiB,UAAU,MAAM,KAAK,oBAAoB,CAAC;AAAA,MACrE,CAAC;AAAA,IACH;AAAA,IAEQ,sBAA4B;AAElC,YAAM,gBAA8C,SAAS,iBAAiB,6BAA6B;AAC3G,UAAI,aAAqB;AACzB,cAAQ,IAAI,SAAS;AAGrB,oBAAc,QAAQ,WAAS;AAE3B,sBAAc,OAAO,MAAM,KAAK;AAAA,MACpC,CAAC;AAGD,YAAM,eAAmC,SAAS,eAAe,cAAc;AAC/E,UAAI,cAAc;AACd,qBAAa,cAAc,gBAAgB;AAAA,MAC/C;AAEA,YAAM,YAAqC,SAAS,iBAAiB,aAAa;AAClF,gBAAU,QAAQ,UAAQ;AAExB,gBAAO,KAAK,aAAa,WAAW,GAAG;AAAA,UACrC,KAAK;AACH,iBAAK,YAAY,MAAM,WAAW,SAAS,CAAC;AAC5C;AAAA,UACF,KAAK;AACH,kBAAM,aAA4B,KAAK,cAAc,UAAU;AAC/D,gBAAI,YAAY;AACd,mBAAK,YAAY,MAAM,WAAW,SAAS,CAAC;AAAA,YAC9C;AACA;AAAA,QACJ;AAAA,MAEF,CAAC;AAAA,IAeH;AAAA,IAEQ,cAAc,OAA8B;AAClD,YAAM,aAAuB,CAAC,GAAG,MAAM,KAAM,MAAM,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,OAAO,MAAO,OAAO,OAAO,OAAO,KAAK;AAGrI,UAAI,QAAQ,KAAK,SAAS,WAAW,QAAQ;AACzC,gBAAQ,MAAM,+DAA+D;AAC7E,eAAO;AAAA,MACX;AAEA,aAAO,WAAW;AAAA,IACpB;AAAA,IAGA,YAAY,MAAmB,OAAqB;AAGlD,cAAO,KAAK,QAAQ,YAAY,GAAG;AAAA,QACjC,KAAK;AAEH,gBAAM,YAA8B;AACpC,oBAAU,QAAQ;AAElB;AAAA,QACF;AAEE,eAAK,YAAY;AAEjB;AAAA,MACJ;AAAA,IAGF;AAAA,EAEF;",
  "names": []
}
