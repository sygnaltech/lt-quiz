{
  "version": 3,
  "sources": ["../src/ipinfo.ts"],
  "sourcesContent": ["\n\n\nexport class IPInfo {\n\n    constructor() {\n    } \n    \n    async init() {\n        const url = `https://ipinfo.io?token=44b4a5206a1bb2`;\n\n        try {\n            const response = await fetch(url);\n            const data = await response.json();\n            console.log(data);\n\n            this.applyIPInfoData(data);\n\n        } catch (error) {\n            console.error('Failed to fetch IP info:', error);\n        }\n    }\n\n    applyIPInfoData(data: any) {\n        // Find all elements with the 'ip-info' attribute\n        const elements = document.querySelectorAll<HTMLElement>('[ip-info]');\n\n        // Iterate over each element\n        elements.forEach((element: HTMLElement) => {\n            // Get the property name from the 'ip-info' attribute\n            const propertyName = element.getAttribute('ip-info');\n            \n            // Check if the property exists in the data object\n            if (propertyName && data.hasOwnProperty(propertyName)) {\n                // Set the inner text of the element to the value of the corresponding property in the data object\n        //          element.textContent = data[propertyName];\n\n                this.setElemData(element, data[propertyName]); \n\n            } else {\n                console.log(`Property '${propertyName}' not found in data`);\n            }\n        });\n    }\n\n    setElemData(elem: HTMLElement, value: string): void {\n\n        switch(elem.tagName.toLowerCase()) {\n            case \"input\":\n\n                const inputElem: HTMLInputElement = elem as HTMLInputElement; \n                inputElem.value = value;\n\n                break;\n            default: \n\n                elem.innerText = value; \n\n                break;\n        }\n\n    }\n\n}"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;AAGO,MAAM,SAAN,MAAa;AAAA,IAEhB,cAAc;AAAA,IACd;AAAA,IAEM,OAAO;AAAA;AACT,cAAM,MAAM;AAEZ,YAAI;AACA,gBAAM,WAAW,MAAM,MAAM,GAAG;AAChC,gBAAM,OAAO,MAAM,SAAS,KAAK;AACjC,kBAAQ,IAAI,IAAI;AAEhB,eAAK,gBAAgB,IAAI;AAAA,QAE7B,SAAS,OAAP;AACE,kBAAQ,MAAM,4BAA4B,KAAK;AAAA,QACnD;AAAA,MACJ;AAAA;AAAA,IAEA,gBAAgB,MAAW;AAEvB,YAAM,WAAW,SAAS,iBAA8B,WAAW;AAGnE,eAAS,QAAQ,CAAC,YAAyB;AAEvC,cAAM,eAAe,QAAQ,aAAa,SAAS;AAGnD,YAAI,gBAAgB,KAAK,eAAe,YAAY,GAAG;AAInD,eAAK,YAAY,SAAS,KAAK,aAAa;AAAA,QAEhD,OAAO;AACH,kBAAQ,IAAI,aAAa,iCAAiC;AAAA,QAC9D;AAAA,MACJ,CAAC;AAAA,IACL;AAAA,IAEA,YAAY,MAAmB,OAAqB;AAEhD,cAAO,KAAK,QAAQ,YAAY,GAAG;AAAA,QAC/B,KAAK;AAED,gBAAM,YAA8B;AACpC,oBAAU,QAAQ;AAElB;AAAA,QACJ;AAEI,eAAK,YAAY;AAEjB;AAAA,MACR;AAAA,IAEJ;AAAA,EAEJ;",
  "names": []
}
